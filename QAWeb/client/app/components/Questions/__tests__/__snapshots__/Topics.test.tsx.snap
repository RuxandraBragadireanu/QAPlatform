// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Topics should render correctly, and match snapshot when it does not have topics and isLoading is false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionsContainer
    deleteTopic={[Function]}
    isLoading={false}
    onLoad={[Function]}
    topics={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/createTopic"
        >
          <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>
        </Link>,
        <WithStyles(Paper)>
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": "60%",
                    }
                  }
                >
                  Title
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Username
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody)>
              <WithStyles(TableRow)
                style={
                  Object {
                    "height": 340,
                  }
                }
              >
                <WithStyles(TableCell)
                  style={
                    Object {
                      "color": "#DADCDF",
                      "fontStyle": "italic",
                      "left": "calc(50% - 70px)",
                      "position": "relative",
                    }
                  }
                >
                  No active topics
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
            </WithStyles(TableBody)>
          </WithStyles(Table)>
        </WithStyles(Paper)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>,
          "replace": false,
          "to": "/createTopic",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create topic",
            "style": Object {
              "marginLeft": 24,
              "marginTop": 24,
            },
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Create topic",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)
                  style={
                    Object {
                      "height": 340,
                    }
                  }
                >
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "color": "#DADCDF",
                        "fontStyle": "italic",
                        "left": "calc(50% - 70px)",
                        "position": "relative",
                      }
                    }
                  >
                    No active topics
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>,
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)
                    style={
                      Object {
                        "height": 340,
                      }
                    }
                  >
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "color": "#DADCDF",
                          "fontStyle": "italic",
                          "left": "calc(50% - 70px)",
                          "position": "relative",
                        }
                      }
                    >
                      No active topics
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Title",
                        "style": Object {
                          "width": "60%",
                        },
                      },
                      "ref": null,
                      "rendered": "Title",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Username",
                      },
                      "ref": null,
                      "rendered": "Username",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)
                    style={
                      Object {
                        "height": 340,
                      }
                    }
                  >
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "color": "#DADCDF",
                          "fontStyle": "italic",
                          "left": "calc(50% - 70px)",
                          "position": "relative",
                        }
                      }
                    >
                      No active topics
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "10000",
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableCell)
                      style={
                        Object {
                          "color": "#DADCDF",
                          "fontStyle": "italic",
                          "left": "calc(50% - 70px)",
                          "position": "relative",
                        }
                      }
                    >
                      No active topics
                    </WithStyles(TableCell)>,
                    "style": Object {
                      "height": 340,
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "No active topics",
                      "style": Object {
                        "color": "#DADCDF",
                        "fontStyle": "italic",
                        "left": "calc(50% - 70px)",
                        "position": "relative",
                      },
                    },
                    "ref": null,
                    "rendered": "No active topics",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/createTopic"
          >
            <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>
          </Link>,
          <WithStyles(Paper)>
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)
                  style={
                    Object {
                      "height": 340,
                    }
                  }
                >
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "color": "#DADCDF",
                        "fontStyle": "italic",
                        "left": "calc(50% - 70px)",
                        "position": "relative",
                      }
                    }
                  >
                    No active topics
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>
          </WithStyles(Paper)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>,
            "replace": false,
            "to": "/createTopic",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create topic",
              "style": Object {
                "marginLeft": 24,
                "marginTop": 24,
              },
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Create topic",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Table)>
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)
                    style={
                      Object {
                        "height": 340,
                      }
                    }
                  >
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "color": "#DADCDF",
                          "fontStyle": "italic",
                          "left": "calc(50% - 70px)",
                          "position": "relative",
                        }
                      }
                    >
                      No active topics
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>
              </WithStyles(Table)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(TableHead)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>
                  </WithStyles(TableHead)>,
                  <WithStyles(TableBody)>
                    <WithStyles(TableRow)
                      style={
                        Object {
                          "height": 340,
                        }
                      }
                    >
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "color": "#DADCDF",
                            "fontStyle": "italic",
                            "left": "calc(50% - 70px)",
                            "position": "relative",
                          }
                        }
                      >
                        No active topics
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>
                  </WithStyles(TableBody)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": "60%",
                            }
                          }
                        >
                          Title
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          Username
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Title",
                          "style": Object {
                            "width": "60%",
                          },
                        },
                        "ref": null,
                        "rendered": "Title",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Username",
                        },
                        "ref": null,
                        "rendered": "Username",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableRow)
                      style={
                        Object {
                          "height": 340,
                        }
                      }
                    >
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "color": "#DADCDF",
                            "fontStyle": "italic",
                            "left": "calc(50% - 70px)",
                            "position": "relative",
                          }
                        }
                      >
                        No active topics
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "10000",
                    "nodeType": "class",
                    "props": Object {
                      "children": <WithStyles(TableCell)
                        style={
                          Object {
                            "color": "#DADCDF",
                            "fontStyle": "italic",
                            "left": "calc(50% - 70px)",
                            "position": "relative",
                          }
                        }
                      >
                        No active topics
                      </WithStyles(TableCell)>,
                      "style": Object {
                        "height": 340,
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "No active topics",
                        "style": Object {
                          "color": "#DADCDF",
                          "fontStyle": "italic",
                          "left": "calc(50% - 70px)",
                          "position": "relative",
                        },
                      },
                      "ref": null,
                      "rendered": "No active topics",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Topics should render correctly, and match snapshot when it does not have topics and isLoading is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionsContainer
    deleteTopic={[Function]}
    isLoading={true}
    onLoad={[Function]}
    topics={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/createTopic"
        >
          <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>
        </Link>,
        <WithStyles(Paper)>
          <WithStyles(LinearProgress) />
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": "60%",
                    }
                  }
                >
                  Title
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Username
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody) />
          </WithStyles(Table)>
        </WithStyles(Paper)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>,
          "replace": false,
          "to": "/createTopic",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create topic",
            "style": Object {
              "marginLeft": 24,
              "marginTop": 24,
            },
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Create topic",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(LinearProgress) />,
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody) />
            </WithStyles(Table)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>,
                <WithStyles(TableBody) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Title",
                        "style": Object {
                          "width": "60%",
                        },
                      },
                      "ref": null,
                      "rendered": "Title",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Username",
                      },
                      "ref": null,
                      "rendered": "Username",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": false,
                },
                "ref": null,
                "rendered": false,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/createTopic"
          >
            <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>
          </Link>,
          <WithStyles(Paper)>
            <WithStyles(LinearProgress) />
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody) />
            </WithStyles(Table)>
          </WithStyles(Paper)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>,
            "replace": false,
            "to": "/createTopic",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create topic",
              "style": Object {
                "marginLeft": 24,
                "marginTop": 24,
              },
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Create topic",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(LinearProgress) />,
              <WithStyles(Table)>
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>
                <WithStyles(TableBody) />
              </WithStyles(Table)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(TableHead)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>
                  </WithStyles(TableHead)>,
                  <WithStyles(TableBody) />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": "60%",
                            }
                          }
                        >
                          Title
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          Username
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Title",
                          "style": Object {
                            "width": "60%",
                          },
                        },
                        "ref": null,
                        "rendered": "Title",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Username",
                        },
                        "ref": null,
                        "rendered": "Username",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": false,
                  },
                  "ref": null,
                  "rendered": false,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Topics should render correctly, and match snapshot when it has topics, and isLoading is false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionsContainer
    deleteTopic={[Function]}
    isLoading={false}
    onLoad={[Function]}
    topics={
      Array [
        Object {
          "id": 1,
          "title": "TestTitle1",
          "userName": "TestUsername1",
        },
        Object {
          "id": 2,
          "title": "TestTitle2",
          "userName": "TestUsername2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/createTopic"
        >
          <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>
        </Link>,
        <WithStyles(Paper)>
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": "60%",
                    }
                  }
                >
                  Title
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Username
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                        "display": "flex",
                      }
                    }
                  >
                    <pure(StarBorderIcon) />

                    <div
                      style={
                        Object {
                          "fontSize": 15,
                          "marginLeft": 4,
                          "marginTop": 4,
                        }
                      }
                    />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <Link
                    replace={false}
                    to="/topics/1"
                  >
                    TestTitle1
                  </Link>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  TestUsername1
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "padding": "0 0 0 80px",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(EditIcon) />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(DeleteForeverIcon) />
                  </div>
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                        "display": "flex",
                      }
                    }
                  >
                    <pure(StarBorderIcon) />

                    <div
                      style={
                        Object {
                          "fontSize": 15,
                          "marginLeft": 4,
                          "marginTop": 4,
                        }
                      }
                    />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <Link
                    replace={false}
                    to="/topics/2"
                  >
                    TestTitle2
                  </Link>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  TestUsername2
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "padding": "0 0 0 80px",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(EditIcon) />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(DeleteForeverIcon) />
                  </div>
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
            </WithStyles(TableBody)>
          </WithStyles(Table)>
        </WithStyles(Paper)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>,
          "replace": false,
          "to": "/createTopic",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create topic",
            "style": Object {
              "marginLeft": 24,
              "marginTop": 24,
            },
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Create topic",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/1"
                    >
                      TestTitle1
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername1
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/2"
                    >
                      TestTitle2
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername2
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>,
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/1"
                      >
                        TestTitle1
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername1
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/2"
                      >
                        TestTitle2
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername2
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Title",
                        "style": Object {
                          "width": "60%",
                        },
                      },
                      "ref": null,
                      "rendered": "Title",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Username",
                      },
                      "ref": null,
                      "rendered": "Username",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/1"
                        >
                          TestTitle1
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername1
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>,
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/2"
                        >
                          TestTitle2
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername2
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          TestUsername1
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <pure(StarBorderIcon) />,
                              " ",
                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />,
                            ],
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                              "display": "flex",
                            },
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            " ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": undefined,
                                "style": Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestTitle1",
                            "replace": false,
                            "to": "/topics/1",
                          },
                          "ref": null,
                          "rendered": "TestTitle1",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "TestUsername1",
                        },
                        "ref": null,
                        "rendered": "TestUsername1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>,
                          "style": Object {
                            "padding": "0 0 0 80px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(EditIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(DeleteForeverIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          TestUsername2
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <pure(StarBorderIcon) />,
                              " ",
                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />,
                            ],
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                              "display": "flex",
                            },
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            " ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": undefined,
                                "style": Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestTitle2",
                            "replace": false,
                            "to": "/topics/2",
                          },
                          "ref": null,
                          "rendered": "TestTitle2",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "TestUsername2",
                        },
                        "ref": null,
                        "rendered": "TestUsername2",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>,
                          "style": Object {
                            "padding": "0 0 0 80px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(EditIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(DeleteForeverIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/createTopic"
          >
            <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>
          </Link>,
          <WithStyles(Paper)>
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/1"
                    >
                      TestTitle1
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername1
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/2"
                    >
                      TestTitle2
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername2
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>
          </WithStyles(Paper)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>,
            "replace": false,
            "to": "/createTopic",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create topic",
              "style": Object {
                "marginLeft": 24,
                "marginTop": 24,
              },
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Create topic",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Table)>
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/1"
                      >
                        TestTitle1
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername1
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/2"
                      >
                        TestTitle2
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername2
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>
              </WithStyles(Table)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(TableHead)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>
                  </WithStyles(TableHead)>,
                  <WithStyles(TableBody)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/1"
                        >
                          TestTitle1
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername1
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/2"
                        >
                          TestTitle2
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername2
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>
                  </WithStyles(TableBody)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": "60%",
                            }
                          }
                        >
                          Title
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          Username
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Title",
                          "style": Object {
                            "width": "60%",
                          },
                        },
                        "ref": null,
                        "rendered": "Title",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Username",
                        },
                        "ref": null,
                        "rendered": "Username",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          TestUsername1
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>
                      </WithStyles(TableRow)>,
                      <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          TestUsername2
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>
                      </WithStyles(TableRow)>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <Link
                              replace={false}
                              to="/topics/1"
                            >
                              TestTitle1
                            </Link>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            TestUsername1
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)
                            style={
                              Object {
                                "padding": "0 0 0 80px",
                              }
                            }
                          >
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <pure(StarBorderIcon) />,
                                " ",
                                <div
                                  style={
                                    Object {
                                      "fontSize": 15,
                                      "marginLeft": 4,
                                      "marginTop": 4,
                                    }
                                  }
                                />,
                              ],
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                                "display": "flex",
                              },
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              " ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": undefined,
                                  "style": Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  },
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/topics/1"
                            >
                              TestTitle1
                            </Link>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "TestTitle1",
                              "replace": false,
                              "to": "/topics/1",
                            },
                            "ref": null,
                            "rendered": "TestTitle1",
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestUsername1",
                          },
                          "ref": null,
                          "rendered": "TestUsername1",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>,
                            "style": Object {
                              "padding": "0 0 0 80px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(EditIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(DeleteForeverIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <Link
                              replace={false}
                              to="/topics/2"
                            >
                              TestTitle2
                            </Link>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            TestUsername2
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)
                            style={
                              Object {
                                "padding": "0 0 0 80px",
                              }
                            }
                          >
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <pure(StarBorderIcon) />,
                                " ",
                                <div
                                  style={
                                    Object {
                                      "fontSize": 15,
                                      "marginLeft": 4,
                                      "marginTop": 4,
                                    }
                                  }
                                />,
                              ],
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                                "display": "flex",
                              },
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              " ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": undefined,
                                  "style": Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  },
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/topics/2"
                            >
                              TestTitle2
                            </Link>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "TestTitle2",
                              "replace": false,
                              "to": "/topics/2",
                            },
                            "ref": null,
                            "rendered": "TestTitle2",
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestUsername2",
                          },
                          "ref": null,
                          "rendered": "TestUsername2",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>,
                            "style": Object {
                              "padding": "0 0 0 80px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(EditIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(DeleteForeverIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Topics should render correctly, and match snapshot when it has topics, and isLoading is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionsContainer
    deleteTopic={[Function]}
    isLoading={true}
    onLoad={[Function]}
    topics={
      Array [
        Object {
          "id": 1,
          "title": "TestTitle1",
          "userName": "TestUsername1",
        },
        Object {
          "id": 2,
          "title": "TestTitle2",
          "userName": "TestUsername2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/createTopic"
        >
          <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>
        </Link>,
        <WithStyles(Paper)>
          <WithStyles(LinearProgress) />
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": "60%",
                    }
                  }
                >
                  Title
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Username
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
                <WithStyles(TableCell)
                  style={
                    Object {
                      "width": 25,
                    }
                  }
                />
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                        "display": "flex",
                      }
                    }
                  >
                    <pure(StarBorderIcon) />

                    <div
                      style={
                        Object {
                          "fontSize": 15,
                          "marginLeft": 4,
                          "marginTop": 4,
                        }
                      }
                    />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <Link
                    replace={false}
                    to="/topics/1"
                  >
                    TestTitle1
                  </Link>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  TestUsername1
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "padding": "0 0 0 80px",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(EditIcon) />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(DeleteForeverIcon) />
                  </div>
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                        "display": "flex",
                      }
                    }
                  >
                    <pure(StarBorderIcon) />

                    <div
                      style={
                        Object {
                          "fontSize": 15,
                          "marginLeft": 4,
                          "marginTop": 4,
                        }
                      }
                    />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <Link
                    replace={false}
                    to="/topics/2"
                  >
                    TestTitle2
                  </Link>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  TestUsername2
                </WithStyles(TableCell)>
                <WithStyles(TableCell)
                  style={
                    Object {
                      "padding": "0 0 0 80px",
                    }
                  }
                >
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(EditIcon) />
                  </div>
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "cursor": "pointer",
                      }
                    }
                  >
                    <pure(DeleteForeverIcon) />
                  </div>
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
            </WithStyles(TableBody)>
          </WithStyles(Table)>
        </WithStyles(Paper)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            style={
              Object {
                "marginLeft": 24,
                "marginTop": 24,
              }
            }
            variant="contained"
          >
            Create topic
          </WithStyles(Button)>,
          "replace": false,
          "to": "/createTopic",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create topic",
            "style": Object {
              "marginLeft": 24,
              "marginTop": 24,
            },
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Create topic",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(LinearProgress) />,
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/1"
                    >
                      TestTitle1
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername1
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/2"
                    >
                      TestTitle2
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername2
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>,
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/1"
                      >
                        TestTitle1
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername1
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/2"
                      >
                        TestTitle2
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername2
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Title",
                        "style": Object {
                          "width": "60%",
                        },
                      },
                      "ref": null,
                      "rendered": "Title",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Username",
                      },
                      "ref": null,
                      "rendered": "Username",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "style": Object {
                          "width": 25,
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/1"
                        >
                          TestTitle1
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername1
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>,
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/2"
                        >
                          TestTitle2
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername2
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          TestUsername1
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <pure(StarBorderIcon) />,
                              " ",
                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />,
                            ],
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                              "display": "flex",
                            },
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            " ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": undefined,
                                "style": Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestTitle1",
                            "replace": false,
                            "to": "/topics/1",
                          },
                          "ref": null,
                          "rendered": "TestTitle1",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "TestUsername1",
                        },
                        "ref": null,
                        "rendered": "TestUsername1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>,
                          "style": Object {
                            "padding": "0 0 0 80px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(EditIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(DeleteForeverIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          TestUsername2
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <pure(StarBorderIcon) />,
                              " ",
                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />,
                            ],
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                              "display": "flex",
                            },
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            " ",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": undefined,
                                "style": Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "div",
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestTitle2",
                            "replace": false,
                            "to": "/topics/2",
                          },
                          "ref": null,
                          "rendered": "TestTitle2",
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "TestUsername2",
                        },
                        "ref": null,
                        "rendered": "TestUsername2",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>,
                          "style": Object {
                            "padding": "0 0 0 80px",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(EditIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <pure(DeleteForeverIcon) />,
                            "onClick": [Function],
                            "style": Object {
                              "cursor": "pointer",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": "div",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/createTopic"
          >
            <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>
          </Link>,
          <WithStyles(Paper)>
            <WithStyles(LinearProgress) />
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": "60%",
                      }
                    }
                  >
                    Title
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Username
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "width": 25,
                      }
                    }
                  />
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/1"
                    >
                      TestTitle1
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername1
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                          "display": "flex",
                        }
                      }
                    >
                      <pure(StarBorderIcon) />

                      <div
                        style={
                          Object {
                            "fontSize": 15,
                            "marginLeft": 4,
                            "marginTop": 4,
                          }
                        }
                      />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <Link
                      replace={false}
                      to="/topics/2"
                    >
                      TestTitle2
                    </Link>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    TestUsername2
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)
                    style={
                      Object {
                        "padding": "0 0 0 80px",
                      }
                    }
                  >
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(EditIcon) />
                    </div>
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    <div
                      onClick={[Function]}
                      style={
                        Object {
                          "cursor": "pointer",
                        }
                      }
                    >
                      <pure(DeleteForeverIcon) />
                    </div>
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableBody)>
            </WithStyles(Table)>
          </WithStyles(Paper)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              style={
                Object {
                  "marginLeft": 24,
                  "marginTop": 24,
                }
              }
              variant="contained"
            >
              Create topic
            </WithStyles(Button)>,
            "replace": false,
            "to": "/createTopic",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create topic",
              "style": Object {
                "marginLeft": 24,
                "marginTop": 24,
              },
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Create topic",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(LinearProgress) />,
              <WithStyles(Table)>
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": "60%",
                        }
                      }
                    >
                      Title
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Username
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "width": 25,
                        }
                      }
                    />
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>
                <WithStyles(TableBody)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/1"
                      >
                        TestTitle1
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername1
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "display": "flex",
                          }
                        }
                      >
                        <pure(StarBorderIcon) />

                        <div
                          style={
                            Object {
                              "fontSize": 15,
                              "marginLeft": 4,
                              "marginTop": 4,
                            }
                          }
                        />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <Link
                        replace={false}
                        to="/topics/2"
                      >
                        TestTitle2
                      </Link>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      TestUsername2
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)
                      style={
                        Object {
                          "padding": "0 0 0 80px",
                        }
                      }
                    >
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(EditIcon) />
                      </div>
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      <div
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                          }
                        }
                      >
                        <pure(DeleteForeverIcon) />
                      </div>
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableBody)>
              </WithStyles(Table)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(TableHead)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>
                  </WithStyles(TableHead)>,
                  <WithStyles(TableBody)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/1"
                        >
                          TestTitle1
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername1
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>
                    <WithStyles(TableRow)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                              "display": "flex",
                            }
                          }
                        >
                          <pure(StarBorderIcon) />

                          <div
                            style={
                              Object {
                                "fontSize": 15,
                                "marginLeft": 4,
                                "marginTop": 4,
                              }
                            }
                          />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <Link
                          replace={false}
                          to="/topics/2"
                        >
                          TestTitle2
                        </Link>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        TestUsername2
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "padding": "0 0 0 80px",
                          }
                        }
                      >
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(EditIcon) />
                        </div>
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        <div
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                        >
                          <pure(DeleteForeverIcon) />
                        </div>
                      </WithStyles(TableCell)>
                    </WithStyles(TableRow)>
                  </WithStyles(TableBody)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(TableRow)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        Title
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)>
                        Username
                      </WithStyles(TableCell)>
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                      <WithStyles(TableCell)
                        style={
                          Object {
                            "width": 25,
                          }
                        }
                      />
                    </WithStyles(TableRow)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": "60%",
                            }
                          }
                        >
                          Title
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)>
                          Username
                        </WithStyles(TableCell)>,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "width": 25,
                            }
                          }
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Title",
                          "style": Object {
                            "width": "60%",
                          },
                        },
                        "ref": null,
                        "rendered": "Title",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Username",
                        },
                        "ref": null,
                        "rendered": "Username",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "style": Object {
                            "width": 25,
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/1"
                          >
                            TestTitle1
                          </Link>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          TestUsername1
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>
                      </WithStyles(TableRow)>,
                      <WithStyles(TableRow)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "flex",
                              }
                            }
                          >
                            <pure(StarBorderIcon) />

                            <div
                              style={
                                Object {
                                  "fontSize": 15,
                                  "marginLeft": 4,
                                  "marginTop": 4,
                                }
                              }
                            />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <Link
                            replace={false}
                            to="/topics/2"
                          >
                            TestTitle2
                          </Link>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          TestUsername2
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)
                          style={
                            Object {
                              "padding": "0 0 0 80px",
                            }
                          }
                        >
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(EditIcon) />
                          </div>
                        </WithStyles(TableCell)>
                        <WithStyles(TableCell)>
                          <div
                            onClick={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                              }
                            }
                          >
                            <pure(DeleteForeverIcon) />
                          </div>
                        </WithStyles(TableCell)>
                      </WithStyles(TableRow)>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <Link
                              replace={false}
                              to="/topics/1"
                            >
                              TestTitle1
                            </Link>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            TestUsername1
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)
                            style={
                              Object {
                                "padding": "0 0 0 80px",
                              }
                            }
                          >
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <pure(StarBorderIcon) />,
                                " ",
                                <div
                                  style={
                                    Object {
                                      "fontSize": 15,
                                      "marginLeft": 4,
                                      "marginTop": 4,
                                    }
                                  }
                                />,
                              ],
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                                "display": "flex",
                              },
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              " ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": undefined,
                                  "style": Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  },
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/topics/1"
                            >
                              TestTitle1
                            </Link>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "TestTitle1",
                              "replace": false,
                              "to": "/topics/1",
                            },
                            "ref": null,
                            "rendered": "TestTitle1",
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestUsername1",
                          },
                          "ref": null,
                          "rendered": "TestUsername1",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>,
                            "style": Object {
                              "padding": "0 0 0 80px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(EditIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(DeleteForeverIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <Link
                              replace={false}
                              to="/topics/2"
                            >
                              TestTitle2
                            </Link>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            TestUsername2
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)
                            style={
                              Object {
                                "padding": "0 0 0 80px",
                              }
                            }
                          >
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                          <WithStyles(TableCell)>
                            <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>
                          </WithStyles(TableCell)>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "flex",
                                }
                              }
                            >
                              <pure(StarBorderIcon) />

                              <div
                                style={
                                  Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  }
                                }
                              />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <pure(StarBorderIcon) />,
                                " ",
                                <div
                                  style={
                                    Object {
                                      "fontSize": 15,
                                      "marginLeft": 4,
                                      "marginTop": 4,
                                    }
                                  }
                                />,
                              ],
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                                "display": "flex",
                              },
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              " ",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": undefined,
                                  "style": Object {
                                    "fontSize": 15,
                                    "marginLeft": 4,
                                    "marginTop": 4,
                                  },
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "div",
                              },
                            ],
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <Link
                              replace={false}
                              to="/topics/2"
                            >
                              TestTitle2
                            </Link>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "TestTitle2",
                              "replace": false,
                              "to": "/topics/2",
                            },
                            "ref": null,
                            "rendered": "TestTitle2",
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "TestUsername2",
                          },
                          "ref": null,
                          "rendered": "TestUsername2",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(EditIcon) />
                            </div>,
                            "style": Object {
                              "padding": "0 0 0 80px",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(EditIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <div
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                            >
                              <pure(DeleteForeverIcon) />
                            </div>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <pure(DeleteForeverIcon) />,
                              "onClick": [Function],
                              "style": Object {
                                "cursor": "pointer",
                              },
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": "div",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
